{"version":3,"sources":["views/components/square.js","views/components/board.js","views/components/playerinfo.js","views/components/history.js","views/index.js","index.js"],"names":["square","props","handleClick","info","position","onClick","state","this","content","className","getSquareContent","Component","board","squares","onClickSquare","genSquareUI","playerinfo","curPlayer","winResult","draw","console","log","result","winPlayer","history","length","onRemakeGame","map","it","index","goBack","bind","stepCount","player","onClickHistory","App","handleClickSquare","iswin","newHistory","slice","getCurPlayer","setState","updataSquares","handleClickHistory","historyItem","handleRemake","prevState","Array","fill","winConditions","i","curCondition","first","second","third","newSquares","curHistory","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dfb105f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './square.less'\r\nclass square extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    \r\n    getSquareContent(){\r\n        const {info , position} = this.props\r\n        let content = position\r\n        if(info){\r\n            content = info\r\n        }\r\n        return content\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"square\" onClick={this.handleClick}>\r\n                 {this.getSquareContent()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClick=()=>{\r\n        const {info , position} = this.props\r\n        if(this.props.onClick){\r\n            this.props.onClick(position,info)\r\n        }\r\n    }\r\n}\r\nexport default square\r\n","import React, { Component } from 'react'\r\nimport './board.less'\r\nimport Square from './square'\r\nclass board extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    genSquareUI(position){\r\n        const { squares } = this.props\r\n        return <Square position={position} info={squares[position]} onClick={this.props.onClickSquare}/>\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"cmp-board\">\r\n                <div className=\"row\">\r\n                    {this.genSquareUI(0)}\r\n                    {this.genSquareUI(1)}\r\n                    {this.genSquareUI(2)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.genSquareUI(3)}\r\n                    {this.genSquareUI(4)}\r\n                    {this.genSquareUI(5)}\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.genSquareUI(6)}\r\n                    {this.genSquareUI(7)}\r\n                    {this.genSquareUI(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default board\r\n","import React, { Component } from 'react'\r\n\r\nclass playerinfo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const {curPlayer , winResult , draw} = this.props\r\n        console.log(draw); \r\n        if(winResult.result && winResult.winPlayer !== null && draw !== true){\r\n            return (\r\n                <div>\r\n                    棋手：{winResult.winPlayer} 获胜\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    下一个棋手：{curPlayer}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default playerinfo\r\n","import React, { Component } from 'react'\r\n\r\nimport './history.less'\r\nclass history extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { history } = this.props\r\n        console.log(\"curStep\",history);\r\n        if( history.length === 0 ){\r\n            return (\r\n                <div className=\"history\">\r\n                    点击棋盘开始游戏\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className=\"history\">\r\n                    <ul>\r\n                        <li key=\"start\" onClick={this.props.onRemakeGame}> \r\n                            重新开始游戏\r\n                        </li>\r\n                        {\r\n                            history.map((it,index)=>{\r\n                                return <li key={index} onClick={this.goBack.bind(this,it)}>\r\n                                            #{it.stepCount} : 棋手 {it.player} 下在位置 {it.position}\r\n                                        </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    goBack(it){\r\n        const { onClickHistory } = this.props\r\n        if(!!onClickHistory){\r\n            onClickHistory(it)\r\n        }\r\n    }\r\n}\r\nexport default history\r\n","import React, { Component } from 'react'\r\nimport Board from './components/board'\r\nimport PlayerInfo from './components/playerinfo'\r\nimport History from './components/history'\r\n\r\nimport './index.less'\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n             squares: new Array(9).fill(null),\r\n             stepCount:0,\r\n             history:[]\r\n        }\r\n    }\r\n    getCurPlayer(){\r\n        const { stepCount } = this.state\r\n        return stepCount%2 === 0 ? \"X\" : \"O\"\r\n    }\r\n    render() {\r\n        const { history , squares } = this.state\r\n        return (\r\n            <div className=\"game-box\">\r\n                <div className=\"leftPanle\">\r\n                    <Board squares={squares} onClickSquare={this.handleClickSquare}/>\r\n                </div>\r\n                <div className=\"rightPanle\">\r\n                    <PlayerInfo \r\n                        curPlayer={this.getCurPlayer()}\r\n                        winResult={this.iswin()}\r\n                    />\r\n                    <History \r\n                        history={history} \r\n                        onClickHistory={this.handleClickHistory}\r\n                        onRemakeGame={this.handleRemake}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    iswin(){\r\n        let result = false\r\n        let winPlayer = null\r\n        let draw = true\r\n        //依赖于 squares 进行判断输赢\r\n        const {squares , stepCount} = this.state\r\n        console.log(squares);\r\n        console.log(stepCount);\r\n        const winConditions = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < winConditions.length; i++) {\r\n            let curCondition = winConditions[i]\r\n            let first = squares[curCondition[0]]\r\n            let second = squares[curCondition[1]]\r\n            let third = squares[curCondition[2]]\r\n            if(first !== null && first === second && second === third){\r\n                result = true\r\n                winPlayer = first\r\n                draw = false\r\n                break;\r\n            }\r\n        }\r\n        return {\r\n            draw:draw,\r\n            result:result,\r\n            winPlayer:winPlayer\r\n        }\r\n    }\r\n    handleClickSquare = (position,info)=>{\r\n        console.log(position,info);\r\n        let {result} = this.iswin()\r\n        if(result){\r\n            return\r\n        }\r\n        if(info === null){\r\n            const {history} = this.state\r\n            const newHistory = [\r\n                ...history.slice(0,this.state.stepCount),\r\n                {\r\n                    stepCount:this.state.stepCount+1,\r\n                    player:this.getCurPlayer(),\r\n                    position:position\r\n                }\r\n            ]\r\n\r\n            this.setState({\r\n                history:newHistory,\r\n                stepCount:this.state.stepCount + 1,\r\n                squares:this.updataSquares(newHistory,this.state.stepCount+1)\r\n            })\r\n        }\r\n    }\r\n\r\n    //某一步的history数据\r\n    handleClickHistory = (historyItem)=>{\r\n        console.log(historyItem);\r\n        this.setState({\r\n            stepCount:historyItem.stepCount,\r\n            squares:this.updataSquares(this.state.history,historyItem.stepCount)\r\n        })\r\n    }\r\n\r\n    updataSquares(history,stepCount){\r\n        const newSquares = new Array(9).fill(null)\r\n        for(let i = 0; i < stepCount; i++){\r\n            let curHistory = history[i]\r\n            newSquares[curHistory.position] = curHistory.player\r\n        }\r\n        return newSquares\r\n    }\r\n\r\n    handleRemake = ()=>{\r\n        const newStepCount = 0\r\n        this.setState((prevState)=>({\r\n            stepCount:newStepCount,\r\n            squares:this.updataSquares(prevState.history,newStepCount)\r\n        }))\r\n    }\r\n}\r\nexport default App\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './views'\r\nrender(\r\n    <div>\r\n        <App/>\r\n    </div>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}